<?php
namespace Magenest\PromoNotification\Block\Notification;

use Magento\Framework\View\Element\Template;

class Info extends Template
{
    /**
     * @var array|\Magento\Checkout\Block\Checkout\LayoutProcessorInterface[]
     */
    protected $layoutProcessors;

    public function __construct(
        Template\Context $context,
        array $layoutProcessors = [],
        array $data = []
    ) {
        parent::__construct($context, $data);
        $this->jsLayout = isset($data['jsLayout']) && is_array($data['jsLayout']) ? $data['jsLayout'] : [];
        $this->layoutProcessors = $layoutProcessors;
    }

    public function getJsLayout()
    {
        foreach ($this->layoutProcessors as $processor) {
            $this->jsLayout = $processor->process($this->jsLayout);
        }
        return \Zend_Json::encode($this->jsLayout);
    }

    public function getCollection()
    {
        $page=($this->getRequest()->getParam('p'))? $this->getRequest()->getParam('p') : 1;
        $pageSize=($this->getRequest()->getParam('limit'))? $this->getRequest()->getParam('limit') : 5;
        $objectManager = \Magento\Framework\App\ObjectManager::getInstance();

        $customerSession = $objectManager->create('Magento\Customer\Model\Session');
        $customerID = $customerSession->getId();

        $customer = $objectManager->create('Magento\Customer\Model\Customer')->load($customerID);
        $notification_received = explode(',',$customer->getData('notification_received')) ;

        $notification_viewed = explode(',',$customer->getData('notification_viewed')) ;

        $notificationList = $objectManager->create('Magenest\PromoNotification\Model\ResourceModel\Notification\Collection')
            ->addFieldToFilter('entity_id', array('in' => $notification_received));

        foreach ($notificationList as $list)
        {
            if(in_array($list->getData('entity_id'),$notification_viewed))
            {
                $list['viewed'] = 1 ;
            }
        }

        $notificationList->setPageSize($pageSize)->setCurPage($page);
        return $notificationList;
    }

    protected function _prepareLayout()
    {
        parent::_prepareLayout(); // TODO: Change the autogenerated stub
        if ($this->getCollection()) {
            $pager = $this->getLayout()->createBlock(
                'Magento\Theme\Block\Html\Pager',
                'test.news.pager'
            )->setAvailableLimit(array(1=>1,2=>2,3=>3))
                ->setShowPerPage(true)->setCollection(
                $this->getCollection()
            );
            $this->setChild('pager', $pager);
            $this->getCollection()->load();
        }
        return $this;
    }

    public function getPagerHtml()
    {
        return $this->getChildHtml('pager');
    }
}